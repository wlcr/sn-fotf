/**
 * Sanity Generated Types
 *
 * This file will be generated by Sanity's codegen based on your schema.
 * Run: npm run sanity:codegen to generate the actual types.
 *
 * DO NOT EDIT THIS FILE MANUALLY - it will be overwritten.
 */

// Placeholder types until we set up the actual schema and run codegen
// These match the structure expected by the PR components

export interface Homepage {
  _id: string;
  _type: 'homepage';
  title?: string;
  pageBuilder?: PageBuilderSection[];
}

export interface ProductDecorator {
  _id: string;
  _type: 'productDecorator';
  nameOverride?: string;
  pageBuilder?: PageBuilderSection[];
}

export type PageBuilderSection =
  | ContentSection
  | ImageContentSection
  | ImageSection
  | FaqSection
  | SideBySideCta;

export interface ContentSection {
  _key: string;
  _type: 'contentSection';
  content?: any[]; // Portable Text content
  contentAlign?: 'alignLeft' | 'alignCenter' | 'alignRight';
  button?: {
    buttonText?: string;
    link?: Link;
  };
}

export interface ImageContentSection {
  _key: string;
  _type: 'imageContentSection';
  content?: any[]; // Portable Text content
  contentAlign?: 'alignLeft' | 'alignCenter' | 'alignRight';
  sectionLayout?: 'imageLeft' | 'imageRight' | 'imageAbove';
  image?: any; // Sanity Image
  button?: {
    buttonText?: string;
    link?: Link;
  };
}

export interface ImageSection {
  _key: string;
  _type: 'imageSection';
  image?: any; // Sanity Image
}

export interface FaqSection {
  _key: string;
  _type: 'faqSection';
  title?: string;
  faqItems?: {
    _key: string;
    question?: string;
    answer?: any[]; // Portable Text
  }[];
}

export interface SideBySideCta {
  _key: string;
  _type: 'sideBySideCta';
  sideA?: CallToAction;
  sideB?: CallToAction;
}

export interface CallToAction {
  heading?: string;
  content?: any[]; // Portable Text
  backgroundImage?: any; // Sanity Image
  link?: Link;
  buttonText?: string;
}

export interface Link {
  _type: 'link';
  linkType?: 'href' | 'page';
  href?: string;
  page?: string;
  openInNewTab?: boolean;
}

// Additional types that will be generated
export interface SiteSettings {
  _id: string;
  _type: 'siteSettings';
  title?: string;
  description?: string;
  logo?: any;
  favicon?: any;
  socialMedia?: any;
  membershipInfo?: {
    title?: string;
    description?: string;
    benefits?: string[];
  };
}

export interface Navigation {
  _id: string;
  _type: 'navigation';
  mainNavigation?: NavigationItem[];
  memberNavigation?: NavigationItem[];
  footerNavigation?: NavigationItem[];
}

export interface NavigationItem {
  title?: string;
  url?: string;
}

// Page types
export interface Page {
  _id: string;
  _type: 'page';
  title?: string;
  slug?: {
    current?: string;
  };
  pageBuilder?: PageBuilderSection[];
}

// All types are exported above as interfaces
