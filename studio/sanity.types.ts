/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SpecialComponentBlock = {
  _type: 'specialComponentBlock';
  specialComponent?: 'labelsComponent' | 'mapComponent' | 'dummyComponent';
};

export type NewsletterSection = {
  _type: 'newsletterSection';
  klaviyoAccountId?: string;
  klaviyoListId?: string;
};

export type Menu = Array<{
  title?: string;
  link?: Link;
  _type: 'menuItem';
  _key: string;
}>;

export type MediaVimeo = {
  _type: 'mediaVimeo';
  landscapeVimeoEmbed?: string;
  landscapePoster?: {
    asset?: {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: 'image';
  };
  portraitVimeoEmbed?: string;
  portraitPoster?: {
    asset?: {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: 'image';
  };
  vimeoDescription?: string;
};

export type ImageSection = {
  _type: 'imageSection';
  image: {
    asset?: {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: 'mediaImage';
  };
};

export type ImageContentSection = {
  _type: 'imageContentSection';
  image: {
    asset?: {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: 'mediaImage';
  };
  content?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: 'span';
      _key: string;
    }>;
    style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote';
    listItem?: 'bullet' | 'number';
    markDefs?: Array<{
      linkType?: 'href' | 'page';
      href?: string;
      page?: {
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: 'page';
      };
      openInNewTab?: boolean;
      _type: 'link';
      _key: string;
    }>;
    level?: number;
    _type: 'block';
    _key: string;
  }>;
  button?: LinkButton;
  sectionLayout?: 'imageLeft' | 'imageRight' | 'imageAbove';
  contentAlign?: 'alignLeft' | 'alignRight' | 'alignCenter';
};

export type MediaImage = {
  _type: 'mediaImage';
  asset?: {
    _ref: string;
    _type: 'reference';
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
  };
  media?: unknown;
  hotspot?: SanityImageHotspot;
  crop?: SanityImageCrop;
  alt?: string;
};

export type HeroSection = {
  _type: 'heroSection';
  name?: string;
  vimeoUrl?: string;
};

export type FaqSection = {
  _type: 'faqSection';
  title?: string;
  faqItems?: Array<{
    question?: string;
    answer?: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: 'span';
        _key: string;
      }>;
      style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote';
      listItem?: 'bullet' | 'number';
      markDefs?: Array<{
        linkType?: 'href' | 'page';
        href?: string;
        page?: {
          _ref: string;
          _type: 'reference';
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: 'page';
        };
        openInNewTab?: boolean;
        _type: 'link';
        _key: string;
      }>;
      level?: number;
      _type: 'block';
      _key: string;
    }>;
    hidden?: boolean;
    _type: 'faqItem';
    _key: string;
  }>;
};

export type CtaBlock = {
  _type: 'ctaBlock';
  ctas?: Array<
    {
      _key: string;
    } & CallToAction
  >;
};

export type ContentSection = {
  _type: 'contentSection';
  content?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: 'span';
      _key: string;
    }>;
    style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote';
    listItem?: 'bullet' | 'number';
    markDefs?: Array<{
      linkType?: 'href' | 'page';
      href?: string;
      page?: {
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: 'page';
      };
      openInNewTab?: boolean;
      _type: 'link';
      _key: string;
    }>;
    level?: number;
    _type: 'block';
    _key: string;
  }>;
  button?: LinkButton;
  contentAlign?: 'alignLeft' | 'alignRight' | 'alignCenter';
};

export type CollectionSection = {
  _type: 'collectionSection';
  heading?: string;
  collectionHandle: string;
  displayOptions?: {
    productsToShow?: number;
    showDescription?: boolean;
    layout?: 'grid' | 'carousel' | 'list';
    showViewAllLink?: boolean;
  };
  seoControls?: {
    preventIndexing?: boolean;
    seoNote?: string;
  };
  styling?: {
    backgroundColor?: 'default' | 'light-gray' | 'dark' | 'brand-primary';
    paddingSize?: 'small' | 'medium' | 'large';
  };
};

export type CallToAction = {
  _type: 'callToAction';
  heading: string;
  content?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: 'span';
      _key: string;
    }>;
    style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote';
    listItem?: 'bullet' | 'number';
    markDefs?: Array<{
      linkType?: 'href' | 'page';
      href?: string;
      page?: {
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: 'page';
      };
      openInNewTab?: boolean;
      _type: 'link';
      _key: string;
    }>;
    level?: number;
    _type: 'block';
    _key: string;
  }>;
  button: LinkButton;
  backgroundImage?: {
    asset?: {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: 'image';
  };
};

export type LinkButton = {
  _type: 'linkButton';
  buttonText?: string;
  link?: Link;
};

export type BlockContent = Array<{
  children?: Array<{
    marks?: Array<string>;
    text?: string;
    _type: 'span';
    _key: string;
  }>;
  style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote';
  listItem?: 'bullet' | 'number';
  markDefs?: Array<{
    linkType?: 'href' | 'page';
    href?: string;
    page?: {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'page';
    };
    openInNewTab?: boolean;
    _type: 'link';
    _key: string;
  }>;
  level?: number;
  _type: 'block';
  _key: string;
}>;

export type ProductPage = {
  _id: string;
  _type: 'productPage';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  productHandle: string;
  slug: Slug;
  nameOverride?: string;
  seoControls?: {
    indexable?: boolean;
    followable?: boolean;
    customMetaDescription?: string;
    seoNotes?: string;
  };
  openGraph?: OpenGraph;
  sections?: Array<
    | ({
        _key: string;
      } & HeroSection)
    | ({
        _key: string;
      } & CollectionSection)
    | ({
        _key: string;
      } & FaqSection)
    | ({
        _key: string;
      } & ContentSection)
    | ({
        _key: string;
      } & ImageContentSection)
    | ({
        _key: string;
      } & ImageSection)
  >;
};

export type CollectionPage = {
  _id: string;
  _type: 'collectionPage';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  collectionHandle: string;
  slug: Slug;
  nameOverride?: string;
  descriptionOverride?: string;
  seoControls?: {
    indexable?: boolean;
    followable?: boolean;
    customMetaDescription?: string;
    seoNotes?: string;
  };
  openGraph?: OpenGraph;
  sections?: Array<
    | ({
        _key: string;
      } & HeroSection)
    | ({
        _key: string;
      } & CollectionSection)
    | ({
        _key: string;
      } & FaqSection)
    | ({
        _key: string;
      } & ContentSection)
    | ({
        _key: string;
      } & ImageContentSection)
    | ({
        _key: string;
      } & ImageSection)
  >;
};

export type OpenGraph = {
  _type: 'openGraph';
  title?: string;
  description?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt: string;
    _type: 'image';
  };
  type?: 'website' | 'article' | 'product';
  twitterCard?: 'summary' | 'summary_large_image' | 'app' | 'player';
  noIndex?: boolean;
};

export type Settings = {
  _id: string;
  _type: 'settings';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title: string;
  description?: string;
  keywords?: Array<string>;
  openGraph?: GlobalOpenGraph;
  gtmContainerId?: string;
  ga4MeasurementId?: string;
  facebookPixelId?: string;
  companyName: string;
  customerGreeting: string;
  contactEmail?: string;
  phoneNumber?: string;
  address?: string;
  socialMedia?: {
    instagram?: string;
    facebook?: string;
    twitter?: string;
    youtube?: string;
    linkedin?: string;
  };
  cookieConsentMessage?: string;
  showCookieConsent?: boolean;
  globalSeoControls?: {
    seoStrategy?: 'marketing' | 'private' | 'homepage_only' | 'custom';
    siteDiscoverable?: boolean;
    allowRobotsCrawling?: boolean;
    emergencyPrivateMode?: boolean;
    lastModified?: string;
    customRobotsDirectives?: Array<string>;
  };
};

export type GlobalOpenGraph = {
  _type: 'globalOpenGraph';
  siteName: string;
  defaultImage?: {
    asset?: {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt: string;
    _type: 'image';
  };
  twitterHandle?: string;
  facebookAppId?: string;
};

export type Homepage = {
  _id: string;
  _type: 'homepage';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  sections?: Array<
    | ({
        _key: string;
      } & HeroSection)
    | ({
        _key: string;
      } & CollectionSection)
    | ({
        _key: string;
      } & FaqSection)
    | ({
        _key: string;
      } & ContentSection)
    | ({
        _key: string;
      } & ImageContentSection)
    | ({
        _key: string;
      } & ImageSection)
  >;
};

export type Page = {
  _id: string;
  _type: 'page';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name: string;
  slug: Slug;
  heading: string;
  sections?: Array<
    | ({
        _key: string;
      } & HeroSection)
    | ({
        _key: string;
      } & CollectionSection)
    | ({
        _key: string;
      } & FaqSection)
    | ({
        _key: string;
      } & ContentSection)
    | ({
        _key: string;
      } & ImageContentSection)
    | ({
        _key: string;
      } & ImageSection)
  >;
};

export type Header = {
  _id: string;
  _type: 'header';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  logo?: {
    asset?: {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt: string;
    _type: 'image';
  };
  ctaButton?: {
    text?: string;
    link?: Link;
    enabled?: boolean;
  };
  announcementBar?: {
    text?: string;
    link?: Link;
    enabled?: boolean;
  };
};

export type Footer = {
  _id: string;
  _type: 'footer';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  logo?: {
    asset?: {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt: string;
    _type: 'image';
  };
  internalLinks?: Menu;
  externalLinks?: Menu;
};

export type Link = {
  _type: 'link';
  linkType?: 'home' | 'productPage' | 'page' | 'href';
  href?: string;
  page?: {
    _ref: string;
    _type: 'reference';
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: 'page';
  };
  productPage?: {
    _ref: string;
    _type: 'reference';
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: 'productPage';
  };
  openInNewTab?: boolean;
};

export type SanityImagePaletteSwatch = {
  _type: 'sanity.imagePaletteSwatch';
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: 'sanity.imagePalette';
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: 'sanity.imageDimensions';
  height: number;
  width: number;
  aspectRatio: number;
};

export type SanityImageHotspot = {
  _type: 'sanity.imageHotspot';
  x: number;
  y: number;
  height: number;
  width: number;
};

export type SanityImageCrop = {
  _type: 'sanity.imageCrop';
  top: number;
  bottom: number;
  left: number;
  right: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: 'sanity.fileAsset';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type SanityImageAsset = {
  _id: string;
  _type: 'sanity.imageAsset';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityImageMetadata = {
  _type: 'sanity.imageMetadata';
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type Geopoint = {
  _type: 'geopoint';
  lat?: number;
  lng?: number;
  alt?: number;
};

export type Slug = {
  _type: 'slug';
  current: string;
  source?: string;
};

export type SanityAssetSourceData = {
  _type: 'sanity.assetSourceData';
  name?: string;
  id?: string;
  url?: string;
};

export type AllSanitySchemaTypes =
  | SpecialComponentBlock
  | NewsletterSection
  | Menu
  | MediaVimeo
  | ImageSection
  | ImageContentSection
  | MediaImage
  | HeroSection
  | FaqSection
  | CtaBlock
  | ContentSection
  | CollectionSection
  | CallToAction
  | LinkButton
  | BlockContent
  | ProductPage
  | CollectionPage
  | OpenGraph
  | Settings
  | GlobalOpenGraph
  | Homepage
  | Page
  | Header
  | Footer
  | Link
  | SanityImagePaletteSwatch
  | SanityImagePalette
  | SanityImageDimensions
  | SanityImageHotspot
  | SanityImageCrop
  | SanityFileAsset
  | SanityImageAsset
  | SanityImageMetadata
  | Geopoint
  | Slug
  | SanityAssetSourceData;
export declare const internalGroqTypeReferenceTo: unique symbol;
